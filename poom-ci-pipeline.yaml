---
stages:
  - name: prepare-env
    exec:
      - $NOTIFY --data-urlencode "status=2" --data-urlencode "current-stage=$STAGE"
      - git clone -b $FLEXIO_SCRIPTS_BRANCH $FLEXIO_SCRIPTS $WORKSPACE/flexio-ci-scripts && export PATH=$PATH:$WORKSPACE/flexio-ci-scripts/bin
      - docker pull $CI_TOOLS_IMAGE
      - mkdir -p $M2
      - mkdir -p $WORKSPACE/gnupg
      - $DOCKER gpg --homedir /gnupg --list-keys
      - $DOCKER_CMD -v $WORKSPACE/gnupg:/gnupg -v $WORKSPACE/secrets/codesigning.asc:/codesigning.asc $CI_TOOLS_IMAGE gpg --homedir /gnupg --batch --import /codesigning.asc

  - name: build
    timeout: 11
    exec:
      - $NOTIFY --data-urlencode "status=2" --data-urlencode "current-stage=$STAGE"
      - $MVN clean install

  - name: deploy
    timeout: 10
    exec:
      - $NOTIFY --data-urlencode "status=2" --data-urlencode "current-stage=$STAGE"
      - $MVN_DEPLOY
    onlyWhen:
      - branch in (master, develop)

  - name: build-an-deploy-docker-images
    timeout: 10
    exec:
      - $NOTIFY --data-urlencode "status=2" --data-urlencode "current-stage=$STAGE"
      - $DOCKER_BUILD $SRC build
      - $DOCKER_BUILD $SRC push
    onlyWhen:
      - branch in (master, develop)

onSuccess:
  - name: metadata-management
    exec:
      - $NOTIFY --data-urlencode "status=2" --data-urlencode "current-stage=$STAGE"
      - $UPLOAD_PROJECT_METADATA
      - $TRIGGER_DOWNSTREAM
    onlyWhen:
      - branch in (master, develop)
  - name: notify-flexio
    exec:
      - $NOTIFY --data-urlencode "status=0" --data-urlencode "current-stage="


onError:
  - name: notify-flexio
    exec:
      - $NOTIFY --data-urlencode "status=1" --data-urlencode "current-stage="

cleanup:
  - name: maven-clean
    exec:
      - $MVN -q clean

  - name: m2-repository-clean
    exec:
      - rm -rf $M2/repository/org/codingmatters
      - rm -rf $M2/repository/io/flexio
env:
  - FLEXIO_SCRIPTS: git@github.com:Flexio-corp/flexio-ci-scripts.git
  - FLEXIO_SCRIPTS_BRANCH: master

  - PIPELINES_URL: https://pipelines.ci.flexio.io/pipelines
  - DEPENDENCIES_URL: https://dependencies.ci.flexio.io/poomci-dependency-api
  - CI_TOOLS_IMAGE: codingmatters/ci-tools:0.0.1-SNAPSHOT

  - M2: /tmp/m2
  - DOCKER_VOLUMES: -v $SRC:/src -v $M2:/m2 -v $WORKSPACE/secrets/settings.xml:/settings.xml -v $WORKSPACE/gnupg:/gnupg -v $WORKSPACE/flexio-ci-scripts:/flexio-ci-scripts
  - DOCKER_ENV: --env REPOSITORY_ID="$REPOSITORY_ID" --env REPOSITORY="$REPOSITORY" --env CHECKOUT_SPEC="$CHECKOUT_SPEC" --env M2_LOCAL_REPO="/m2"
  - DOCKER_CMD: docker run --user $(id -u):$(id -g) --rm
  - DOCKER: $DOCKER_CMD $DOCKER_ENV $DOCKER_VOLUMES $CI_TOOLS_IMAGE

  - MVN_OPTS: -B -Dcodingmatters.docker.namespace=codingmatters -Ddocker.registry=registry.containers.ovh.net
  - MVN: $DOCKER mvn -Dmaven.repo.local=/m2 --settings /settings.xml $MVN_OPTS
  - MVN_DEPLOY: $MVN deploy -DskipTests -Pattach-source-and-javadocs,sign-artifacts -Dgpg.passphrase=$GPG_PASS -Dgpg.homedir=/gnupg

  - UPLOAD_PROJECT_METADATA: $DOCKER /flexio-ci-scripts/bin/upload-project-metadata.sh $DEPENDENCIES_URL /src
  - TRIGGER_DOWNSTREAM: $DOCKER /usr/local/bin/trigger-downstream.sh $PIPELINES_URL $DEPENDENCIES_URL $REPOSITORY_ID "$REPOSITORY" "$CHECKOUT_SPEC"

  - NOTIFY: curl -G "https://my.flexio.io/channelApi/flexHttpInOut/59d3a0105d443519843d0496/5adf40aededdbb452368cfca" --data-urlencode "repository=$REPOSITORY" --data-urlencode "branch=$BRANCH" --data-urlencode "pipeline-id=$PIPELINE_ID"
  - DOCKER_BUILD: $WORKSPACE/flexio-ci-scripts/bin/docker-compose-build.sh

secrets:
  - name: settings.xml
    content: $SRC/.poom-ci-pipeline/settings-oss.xml.enc
    as: file
  - name: codesigning.asc
    content: $SRC/.poom-ci-pipeline/codesigning.asc.enc
    as: file
  - name: GPG_PASS
    content: $SRC/.poom-ci-pipeline/gpg.pass.enc
    as: var