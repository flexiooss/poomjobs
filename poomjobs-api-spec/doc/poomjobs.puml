@startuml
title Job submitted with pending runner

participant "Job Services Consumer" as client
box "POOM Job Services"
    participant "Jobs API" as jobs
    participant "Runners API" as runners
    participant "Job Runner" as runner
end box

activate runner
    runner -> runners: <b>POST /runners</b> \nRunnerData
    activate runners
        runner <-- runners: <b>201</b>: <runner-id>
    deactivate runners
    runner -> jobs: <b>GET /jobs</b>
    activate jobs
        runner <-- jobs: <b>200</b> []
    deactivate jobs
    runner -> runners: <b>PATCH /runners/<runner-id></b> \nRunnerStatusData {status = PENDING}
deactivate runner


client -> jobs: <b>POST /jobs</b> JobCreationData
activate jobs
    client <-- jobs: <b>201</b> <job-id>
    jobs -> runners: <b>GET /runners</b> \
                \n* nameCompetency: <job.name> \
                \n* categoryCompetency: <job.category> \
                \n* runtimeStatus: PENDING \
    activate runners
        jobs <-- runners: <b>200 | 206</b> [Runner]
    deactivate runners

    jobs -> runner: <b>POST /runner/task</b> \nJob
    activate runner
        jobs <-- runner: <b>200</b>


deactivate jobs
    ...
    note right of runner: job evenyually executed
    runner -> jobs: <b>PUT /jobs/<job-id></b> \nJobUpdateData
    activate jobs
        runner <-- jobs: <b>200</b>
    deactivate jobs
    runner -> jobs: <b>GET /jobs</b>
    activate jobs
        runner <-- jobs: <b>200</b> []
    deactivate jobs
    runner -> runners: <b>PATCH /runners/<runner-id></b> \nRunnerStatusData {status = PENDING}
deactivate runner
@enduml


@startuml
title Job Runner

participant "Jobs API" as jobs
participant "Runners API" as runners

box "Runner Internals"
    participant "Job Runner \n {callback, competencies, ttl}" as runner


==Initialize Runner==
activate runner
    runner -> runners: <b>POST /runners</b> \nRunnerData{callback, competencies, ttl}
    activate runners
        runner <-- runners: <b>status</b>
    deactivate runners
    alt status != 201
        runner -[#red]>]: <font color=red><b>FAIL FAST</b></font>
    else
        runner -> runner: store <runner-id>
        create control "Job Worker" as worker
        runner -> worker: start worker thread

        create control "Runner Endpoint" as endpoint
        runner -> endpoint: listen on /<runner-id>
    end
deactivate runner

==Process Pending Jobs==
activate runner
    runner -> jobs: <b>GET /jobs</b> \
                \n* name: <competencies.name> \
                \n* category: <competencies.categories> \
                \n* runStatus: PENDING \
    activate jobs
        runner <-- jobs: <b>200</b> Job[] jobs
    deactivate jobs

    alt jobs is empty
        runner -> runner: set status to <b>IDLE</b>
        runner -> runners: <b>PATCH /runners/<runner-id></b> \
            \nRunnerStatusData {status = IDLE}
        activate runners
            runner <-- runners: status
        deactivate runners
        alt status != 200
            runner -[#red]>]: <font color=red><b>FAIL FAST</b></font>
        end
    else jobs
        runner -> runner: set status to <b>RUNNING</b>
        runner -> runners: <b>PATCH /runners/<runner-id></b> \
            \nRunnerStatusData {status = RUNNING}
        activate runners
            runner <-- runners: status
        deactivate runners
        alt status != 200
            runner -[#red]>]: <font color=red><b>FAIL FAST</b></font>
        end
        loop job in joblist
            runner -> jobs: <b>POST /jobs/<job.id></b> \nJobUpdateData{status.run=RUNNING}
            activate jobs
            runner <-- jobs: status
            deactivate jobs
            alt status == 200
                runner -> worker: <u>run job <b><job></b></u>
            end
        end

    end
deactivate runner


==Process Job Run Request==

    jobs -> endpoint: <b>PUT /runner-id/jobs/<job-id></b> \n\
        Job
    activate endpoint
        alt runner.status != PENDING
            jobs <-- endpoint: <b>409</b> RUNNER_IS_BUSY
        else
            endpoint -> runner: set status to <b>RUNNING</b>
            activate runner
                runner -> runners: <b>PATCH /runners/<runner-id></b> \
                    \nRunnerStatusData {status = RUNNING}
                activate runners
                    runner <-- runners: status
                deactivate runners
                alt status != 200
                    jobs <-- endpoint: <b>500</b>
                    endpoint -[#red]>]: <font color=red><b>FAIL FAST</b></font>
                else status == 200
                    runner -> worker: <u>run job <b><job></b></u>
                end
            deactivate runner
        end


==Run Job==
runner -> worker: run job <b><job></b>
activate worker
    ...<b>job is ran and final status is processed : SUCCESS | FAILURE</b>...
    worker -> jobs: <b>POST /jobs/<job.id></b> \
        \nJobUpdateData{status.run=DONE, exit: <status>}
    activate jobs
        worker <-- jobs: status
    deactivate jobs
    alt status != 200
        runner -[#red]> runner: <font color=red><b>WAIT AND RETRY</b></font>
    else
        runner -> runner: <u>process pending jobs</u>
    end
deactivate worker

end box

@enduml